// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+r",
        "command": "-extension.vim_ctrl+r",
        "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
    },
    {
        "key": "ctrl+e",
        "command": "-extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+g",
        "command": "-extension.vim_ctrl+g",
        "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
    },
    {
        "key": "ctrl+i",
        "command": "-extension.vim_ctrl+i",
        "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+m",
        "command": "-extension.vim_ctrl+m",
        "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+o",
        "command": "-extension.vim_ctrl+o",
        "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+u",
        "command": "-extension.vim_ctrl+u",
        "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
    },
    {
        "key": "ctrl+v",
        "command": "-extension.vim_ctrl+v",
        "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
    },
    {
        "key": "ctrl+x",
        "command": "-extension.vim_ctrl+x",
        "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "-extension.vim_ctrl+y",
        "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"
    },
    {
        "key": "ctrl+l",
        "command": "-extension.vim_navigateCtrlL",
        "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
    },
    {
        "key": "ctrl+d",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+alt+up",
        "command": "-extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+j",
        "command": "extension.vim_ctrl+d"
    },
    {
        "key": "ctrl+alt+k",
        "command": "extension.vim_ctrl+u"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch"
    },
    {
        "key": "ctrl+shift+o",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+k ctrl+y",
        "command": "workbench.action.saveWorkspaceAs"
    },
    {
        "key": "ctrl+k ctrl+g",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+shift+g h",
        "command": "gitlens.openFileHistory"
    },
    {
        "key": "ctrl+shift+escape",
        "command": "workbench.action.openSettings2"
    },
    {
        "key": "ctrl+shift+alt+`",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+u ctrl+0",
        "command": "editor.unfoldAll",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.unfoldAll",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+g m",
        "command": "gitlens.showCommitsView"
    },
    {
        "key": "ctrl+shift+g n",
        "command": "gitlens.showBranchesView"
    },
    {
        "key": "ctrl+shift+g r",
        "command": "gitlens.showRemotesView"
    },
    {
        "key": "ctrl+alt+\\",
        "command": "terminal.focus"
    },
    {
        "key": "ctrl+shift+g v",
        "command": "gitlens.views.timeline.focus"
    },
    {
        "key": "ctrl+shift+u j",
        "command": "workbench.action.terminal.resizePaneDown"
    },
    {
        "key": "ctrl+shift+u k",
        "command": "workbench.action.terminal.resizePaneUp"
    },
    {
        "key": "ctrl+shift+u e",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+shift+u o",
        "command": "outline.collapse"
    },
    {
        "key": "ctrl+k q",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "ctrl+escape",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "ctrl+k i",
        "command": "editor.action.transformToTitlecase"
    },
    {
        "key": "ctrl+e ctrl+n",
        "command": "workbench.action.nextSideBarView"
    },
    {
        "key": "ctrl+e ctrl+p",
        "command": "workbench.action.previousSideBarView"
    }
]